Getting started
===============

  >>> import crom
  >>> import dolmen.breadcrumbs
  >>> import cromlech.location

  >>> crom.monkey.incompat()
  >>> crom.implicit.initialize()

  >>> crom.configure(
  ...     dolmen.breadcrumbs,
  ...     cromlech.location,
  ... )

We need to provide a root::

  >>> from zope.location import Location
  >>> from cromlech.browser import IPublicationRoot
  >>> from zope.interface import directlyProvides

  >>> root = Location()
  >>> directlyProvides(root, IPublicationRoot)

We also need a request, to compute the URLs::

  >>> from cromlech.browser.testing import TestRequest
  >>> request = TestRequest()

Now, we should basically get a result here:

  >>> from dolmen.breadcrumbs import breadcrumbs
  >>> assert list(breadcrumbs(root, request)) == [
  ...     {'url': 'http://localhost', 'name': None}]

If there's an application URL that meeses up with our base url, it should
be reflected::

  >>> request = TestRequest(application_url='http://localhost/app')
  >>> assert list(breadcrumbs(root, request)) == [
  ...     {'url': 'http://localhost/app', 'name': None}]

If the item gets a name, it should be reflected also::

  >>> root.__name__ = 'Bob'
  >>> assert list(breadcrumbs(root, request)) == [
  ...     {'url': 'http://localhost/app', 'name': 'Bob'}]


Siblings, for I am his kinsman !
================================

  >>> from zope.location import locate
  >>> duncan = Location()
  >>> locate(duncan, root, 'Duncan')

  >>> assert list(breadcrumbs(duncan, request)) == [
  ...     {'url': 'http://localhost/app', 'name': 'Bob'},
  ...     {'url': 'http://localhost/app/Duncan', 'name': 'Duncan'}
  ... ]

  >>> malcolm = Location()
  >>> locate(malcolm, duncan, 'Malcolm Heir of the Realm')
  >>> assert list(breadcrumbs(malcolm, request)) == [
  ...     {'url': 'http://localhost/app', 'name': 'Bob'},
  ...     {'url': 'http://localhost/app/Duncan', 'name': 'Duncan'},
  ...     {'url': 'http://localhost/app/Duncan/Malcolm%20Heir%20of%20the%20Realm', 'name': 'Malcolm Heir of the Realm'}
  ... ]


What if...
==========

... thou have no name ?

  >>> anonymous = Location()
  >>> anonymous.__parent__ = root

  >>> list(breadcrumbs(anonymous, request)) # doctest: +ELLIPSIS
  Traceback (most recent call last):
  ...
  KeyError: 'Object name (<...Location object...>) could not be resolved.'


Show me !
=========

  >>> lady = Location()
  >>> locate(lady, root, 'lady')
  >>> thane = Location()
  >>> locate(thane, lady, 'thane')

  >>> from dolmen.breadcrumbs import BreadcrumbsRenderer
  >>> renderer = BreadcrumbsRenderer(thane, request)
  >>> renderer.update()
  >>> print(renderer.render())  # doctest: +NORMALIZE_WHITESPACE
  <div class="breadcrumb">
    <span class="you-are-here">You are here :</span>
    <span class="crumb">
      <a href="http://localhost/app">Bob</a>
      <span class="divider">&rarr;</span>
    </span>
    <span class="crumb">
      <a href="http://localhost/app/lady">lady</a>
      <span class="divider">&rarr;</span>
    </span>
    <span class="crumb">
      <a href="http://localhost/app/lady/thane">thane</a>
    </span>
  </div>
